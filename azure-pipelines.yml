
trigger:
- master

variables:
#  System.Debug: true
  dockerRegistryServiceConnection: 'Local Registry'
  containerRegistry: '172.17.0.1:5000'
  imageRepository: 'hello-world-app'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  k8sNamespace: 'demo'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      name: Local Agent
    steps:
    - task: Bash@3
      displayName: Maven build
      inputs:
        targetType: 'inline'
        script: |
          MAVEN_OPTS="-DproxyHost=172.17.0.1 -DproxyPort=3128" ./mvnw package
          mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: replacetokens@3
      inputs:
        rootDirectory: 'manifests'
        targetFiles: '**/*.yml'

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      name: Local Agent
    environment: 'demo'
    strategy:
      runOnce:
        deploy:
          steps:
#          - task: DownloadPipelineArtifact@2
#            inputs:
#              buildType: 'current'
#              artifactName: 'manifests'
#              targetPath: '$(Pipeline.Workspace)/manifests'

          - task: Kubernetes@1
            displayName: 'Create the demo namespace'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'Local Kubernetes'
              command: 'apply'
              useConfigurationFile: true
              configurationType: 'inline'
              inline: |
                kind: Namespace
                apiVersion: v1
                metadata:
                  name: "$(k8sNamespace)"

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: 'Local Kubernetes'
              namespace: '$(k8sNamespace)'
              manifests: |
                $(Pipeline.Workspace)/manifests/*.yml
#                $(Pipeline.Workspace)/manifests/deployment.yml
#                $(Pipeline.Workspace)/manifests/service.yml
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
